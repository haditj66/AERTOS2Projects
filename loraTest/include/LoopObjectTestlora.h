//generated file: C:/AERTOSProjects/loraTest\include\LoopObjectTestlora.h
//**********************************************************************
//this is an auto-generated file using the template file located in the directory of C:\CodeGenerator\CodeGenerator\bin\Debug\..\..\FileTemplates\Files
//ONLY WRITE CODE IN THE UserCode_Section BLOCKS
//If you write code anywhere else,  it will be overwritten. modify the actual template file if needing to modify code outside usersection blocks.

//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

#pragma once
 
#include "AELoopObject.h" 
#include  "AEObjects.h"   

//UserCode_Sectionheader
#include "AEIntegrationTesting.h"
#include "RYLR896Driver.h"
extern RYLR896Driver* ryld_ptr;
//UserCode_Sectionheader_end

class LoopObjectTestlora : public AELoopObject
{
	
public:
	LoopObjectTestlora() { 
		//UserCode_Sectionctor
		//UserCode_Sectionctor_end
	} 
	
	//UserCode_Sectionpublic
	
	
	//UserCode_Sectionpublic_end
	


protected: 
	
	void StartAOLoopObject()  override
	{
		//		AELoopSubscribe(Button1, AELoopObject1Test, Button1_Callback);
				//UserCode_Sectionstartae
		AELoopSubscribe(LoraMsgReceived, LoopObjectTestlora, LoraMsgReceived_Callback);
		
		tokenForWaiting = rYLR896_U->SendData_WithWait(this->GetAO_ID(), 1, "HelloFromTDU", 12);
		//UserCode_Sectionstartae_end
	}
	
	void Update() override {
		
		//UserCode_Sectionupdate
		
		counter++;
		if (counter > 5)
		{
			//ryld_ptr->SendData(1, "HelloFromTDU", 12); 		
			
			
			if (tokenForWaiting->CheckIfTokenReadyToReturn() == true)
			{
				auto succeess = rYLR896_U->SendData_WaitForRequestToFinish(tokenForWaiting);
				rYLR896_U->SendData_DoneWithRequest(tokenForWaiting);
						
				if (succeess == true)
				{
					AEPrint("message has been sent from tdu!\n");
				}
				else
				{
					AEPrint("message failed to be sent from tdu!\n");
				}
						
				tokenForWaiting = rYLR896_U->SendData_WithWait(this->GetAO_ID(), 1, "HelloFromTDU", 12);
						
				counter = 0;
			}
			
		}

		// true;//
		//		AEITEST_loraTest("tdumsglora", succeess == true, "send a message with lora from the tdu");

		
		//UserCode_Sectionupdate_end
		 
	} 
	
	//UserCode_Sectionprotect
	Token* tokenForWaiting;
	int counter = 0;
		
	void LoraMsgReceived_Callback(AEEventDiscriminator_t* evt)
	{
		LoraMsgReceived* msglora = AE_CastEvent(LoraMsgReceived*); 
		AEPrint("a message from address %d was received\n", msglora->sendingLoraAddress);
		AEPrint("payloadsize: %d  \n", msglora->payloadsize);
		AEPrint("payload: %s  \n", msglora->payload);
	}
	
	//UserCode_Sectionprotect_end
	
};


//UserCode_Sectionfuncs
//UserCode_Sectionfuncs_end