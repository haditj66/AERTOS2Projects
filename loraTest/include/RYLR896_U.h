//generated file: C:/AERTOSProjects/loraTest\include\RYLR896_U.h
//**********************************************************************
//this is an auto-generated file using the template file located in the directory of C:\CodeGenerator\CodeGenerator\bin\Debug\..\..\FileTemplates\Files
//ONLY WRITE CODE IN THE UserCode_Section BLOCKS
//If you write code anywhere else,  it will be overwritten. modify the actual template file if needing to modify code outside usersection blocks.

//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################


#pragma once

#include "AEUtilityAsService.h" 

#include "AEPublishSubscribeManager.h" 

#include "ActionRequestObjectArgTDU.h"
 
#include "AE_TDUAsService.h" 

#include "RYLR896_U_ServiceGen.h"




//UserCode_Sectionheader

#include "RYLR896Driver.h"
//UserCode_Sectionheader_end

class RYLR896_U :   
	 public AEService< 5 , AENullActionRequest, AENullActionRequest, AENullActionRequest, ActionRequestObjectArgTDU3<int16_t , char* , int8_t , bool, 5, RYLR896_U>, AENullActionRequest, AENullActionRequest >
{
public: 

	//UserCode_Sectionpublic
//UserCode_Sectionpublic_end
	 
	RYLR896_U ()
	{ 
		//ActionReq1.ServiceName = "Transmit";
		
		
		ActionReq4.ServiceName = "SendData";
		
		 
		 
		RYLR896_U_CTOR
		
		//UserCode_Sectionctor
//UserCode_Sectionctor_end
		 	
	}
	RYLR896_U_Service
	
	
	protected: RYLR896Driver* rYLR896Driver; 
public: RYLR896Driver*  GetrYLR896Driver()   const {return rYLR896Driver; }


public: void UserInitialize(RYLR896Driver* _rYLR896Driver )
	{
		rYLR896Driver =  _rYLR896Driver;

		
		//UserCode_SectionuserInited
//UserCode_SectionuserInited_end
		
		userInitialized = true;
	}
private: bool userInitialized = false;
protected: void CheckIfConfiguredProperly() const override  
	{
		//RYLR896_U::CheckIfConfiguredProperly();
		if (userInitialized == false)
		{
			// you did not initialize one of your AEobjects
			AEAssertRuntime(userInitialized == true, "user did not call the UserInitailize function for  RYLR896_U"); 
		} 
		 
	}
	
protected: 
	
	//UserCode_Sectionprot
	
 
	
//UserCode_Sectionprot_end
	
	
	//example for waiting on an event
	//actReq->WaitForEvent<SomeOther_Sig>(
	//				[](void* s, AEEventDiscriminator_t* evt)->void {
	//					//SomeOther_Sig* sssc = (SomeOther_Sig*)evt->evt;
	//					AEPrint("Event SomeOther_Sig recieved"); 
	//					return;
	//				}
	//				, 500);
	
	//dont forget to return the service value when finished
	//actReq->SetReturnArg(1); 
	
	//return true in the update function for tdus when the service is done.
	
	//=====================================
	//Normal services
	//=====================================
	  
	  
	  
	
	
	//=====================================
	//TDU services
	//=====================================
	void _SendData(int16_t addressOfLoraModToSendTo, char* dataToSend, int8_t payloadSize) 
   {

         //UserCode_SectionSendData
//UserCode_SectionSendData_end 
   }

void _SendDataCancelCleanup() 
   {

         //UserCode_SectionSendDatacancel
//UserCode_SectionSendDatacancel_end 
   }

    bool _SendDataUpdate(ActionRequestObjectArgTDU3<int16_t , char* , int8_t , bool, 5, RYLR896_U>* request, int16_t addressOfLoraModToSendTo, char* dataToSend, int8_t payloadSize) 
   {

         //UserCode_SectionSendDatau
	   
	   
	   //send the data and wait for the response rYLR896Driver
	   rYLR896Driver->SendData(addressOfLoraModToSendTo, dataToSend, payloadSize);
	   
	   bool eventreceived = request->WaitForEvent(ProjectEventSignals::LoraCommandResponded,
		   [](void* p, AEEventDiscriminator_t* evt)->void
		   {
//			   auto yy = static_cast<RYLR896_U*>(p);
//			   
//			   //return that the send succeeded
//			   yy->ActionReq4.SetReturnArg(false); 
		   },
		   5000 );
	   
	   
	   //return that the send passed or failed
	   request->SetReturnArg(eventreceived);
	   
	   
//UserCode_SectionSendDatau_end 
    return true; 
    }
  
	  
	  
	 
	  

};




//UserCode_Sectionfunc
//UserCode_Sectionfunc_end