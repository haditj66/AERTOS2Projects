//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################


#define I2CDriverU_WriteBytes_CTOR ActionReq4.SetServiceFunc([](I2CDriverU* p, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite){p->_WriteBytes( devAddr,  regAddr,  length,  dataToWrite); });ActionReq4.SetUpdateFunc([](I2CDriverU* p, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite) {return p->_WriteBytesUpdate(&p->ActionReq4,  devAddr,  regAddr,  length,  dataToWrite); });ActionReq4.SetCancelCleanUpFunc([](I2CDriverU* p){p->_WriteBytesCancelCleanup(); });


//WriteBytes----------------------------------------------

	  
	  
	#define I2CDriverU_WriteBytes_Service \
	inline void WriteBytes(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite)\
	{\
		this->RunRequest4(idOfAO,  devAddr,  regAddr,  length,  dataToWrite); \
	}\
	\
	inline Token* WriteBytes_WithWait(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite)\
	{\
		return this->RunRequestWithWait4(idOfAO,  devAddr,  regAddr,  length,  dataToWrite); \
	}\
	\
	inline Action4_RETURNTYPE_t WriteBytes_WaitForRequestToFinish(Token* token)\
	{\
		return this->WaitForRequestToFinish4(token  ); \
	}\
	\
	inline void WriteBytes_DoneWithRequest(Token* tokenOfRequest)\
	{\
		return this->DoneWithRequest4(tokenOfRequest); \
	}\
	inline Action4_RETURNTYPE_t WriteBytes_WaitHereForFinish(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite)\
	{\
		auto token = this->RunRequestWithWait4(idOfAO,  devAddr,  regAddr,  length,  dataToWrite);\
		Action4_RETURNTYPE_t ret = this->WaitForRequestToFinish4(token);\
		this->DoneWithRequest4(token);\
		return ret;\
	}
	
	#define I2CDriverU_WriteBytes void _WriteBytes(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite)
	#define I2CDriverU_WriteBytes_Update bool _WriteBytesUpdate(ActionRequestObjectArgTDU1* actReq, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* dataToWrite)   
#define I2CDriverU_ReadBytes_CTOR ActionReq5.SetServiceFunc([](I2CDriverU* p, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo){p->_ReadBytes( devAddr,  regAddr,  length,  pdataToWriteTo); });ActionReq5.SetUpdateFunc([](I2CDriverU* p, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo) {return p->_ReadBytesUpdate(&p->ActionReq5,  devAddr,  regAddr,  length,  pdataToWriteTo); });ActionReq5.SetCancelCleanUpFunc([](I2CDriverU* p){p->_ReadBytesCancelCleanup(); });


//ReadBytes----------------------------------------------

	  
	  
	#define I2CDriverU_ReadBytes_Service \
	inline void ReadBytes(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo)\
	{\
		this->RunRequest5(idOfAO,  devAddr,  regAddr,  length,  pdataToWriteTo); \
	}\
	\
	inline Token* ReadBytes_WithWait(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo)\
	{\
		return this->RunRequestWithWait5(idOfAO,  devAddr,  regAddr,  length,  pdataToWriteTo); \
	}\
	\
	inline Action5_RETURNTYPE_t ReadBytes_WaitForRequestToFinish(Token* token)\
	{\
		return this->WaitForRequestToFinish5(token  ); \
	}\
	\
	inline void ReadBytes_DoneWithRequest(Token* tokenOfRequest)\
	{\
		return this->DoneWithRequest5(tokenOfRequest); \
	}\
	inline Action5_RETURNTYPE_t ReadBytes_WaitHereForFinish(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo)\
	{\
		auto token = this->RunRequestWithWait5(idOfAO,  devAddr,  regAddr,  length,  pdataToWriteTo);\
		Action5_RETURNTYPE_t ret = this->WaitForRequestToFinish5(token);\
		this->DoneWithRequest5(token);\
		return ret;\
	}
	
	#define I2CDriverU_ReadBytes void _ReadBytes(int idOfAO, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo)
	#define I2CDriverU_ReadBytes_Update bool _ReadBytesUpdate(ActionRequestObjectArgTDU2* actReq, uint8_t devAddr, uint8_t regAddr, uint8_t length, uint8_t* pdataToWriteTo)   
//Alldefines ------------------
#define I2CDriverU_CTOR \
I2CDriverU_WriteBytes_CTOR \
I2CDriverU_ReadBytes_CTOR 
#define I2CDriverU_Service \
I2CDriverU_WriteBytes_Service \
I2CDriverU_ReadBytes_Service 
