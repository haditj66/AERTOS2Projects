//generated file: C:/AERTOSProjects/commonHalAOs\include\LoopObjectTest.h
//**********************************************************************
//this is an auto-generated file using the template file located in the directory of C:\CodeGenerator\CodeGenerator\bin\Debug\..\..\FileTemplates\Files
//ONLY WRITE CODE IN THE UserCode_Section BLOCKS
//If you write code anywhere else,  it will be overwritten. modify the actual template file if needing to modify code outside usersection blocks.

//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

#pragma once
 
#include "AELoopObject.h" 
#include  "AEObjects.h"   

//UserCode_Sectionheader
#define numOfVariables 8



//UserCode_Sectionheader_end

class LoopObjectTest : public AELoopObject
{
	
public:
	LoopObjectTest() { 
		  //UserCode_Sectionctor
		someVar1 = 0;
		memset(someVar2,0,20);
		someVar3 = 0;
		someVar4 = 0;
		someVar5 = 0;
		someVar6 = 0;
		someVar7 = 0;
		someVar8 = 0;
		
//		AllVars = { &someVar1, &someVar2, &someVar2, &someVar2, &someVar2, &someVar2, &someVar2, &someVar2};
		isConnected = false;
//UserCode_Sectionctor_end
	} 
	
 //UserCode_Sectionpublic
	float AllVars;
	float someVar1;
	float someVar2[20];
	float someVar3;
	float someVar4;
	float someVar5;
	float someVar6;
	float someVar7;
	float someVar8;
	
	bool isConnected;
	
	float allDataToSend[27];
//UserCode_Sectionpublic_end
	


protected: 
	
		void StartAOLoopObject()  override
	{
//		AELoopSubscribe(Button1, AELoopObject1Test, Button1_Callback);
		//UserCode_Sectionstartae
		  isConnected = uploadDataToPcU->CheckIfThereIsPCConnection_WaitHereForFinish(this->GetAO_ID(), true);
		
		if (isConnected == false)
		{
			AEPrint("XXXXXXXXX NO connection To The PC XXXXXXXXX\n"); 
		}
		else
		{
			AEPrint("OOOOOOOOOOOOOOO There is a UART connection To The PC OOOOOOOOOOOOOOO\n"); 
		}
		
//UserCode_Sectionstartae_end
	}
	
	void Update() override {
		
		//UserCode_Sectionupdate
		
		if (isConnected)
		{
			
			
			int totalSizeBytes = AEmemcpy_MultipleVariablesToArray<float>(allDataToSend, 
				&someVar1, 1,
				someVar2, 20,
				&someVar3, 1,
				&someVar4, 1,
				&someVar5, 1,
				&someVar6, 1,
				&someVar7, 1,
				&someVar8, 1
			);
			
			
			uploadDataToPcU->UploadDataToPC_WaitHereForFinish(this->GetAO_ID(), (char*)allDataToSend, totalSizeBytes);
		
			someVar1++;
			for (size_t i = 0; i < 20; i++) {someVar2[i] = someVar1; } 
			someVar3++;
			someVar4++;
			someVar5++;
			someVar6++;
			someVar7++;
			someVar8++;
		}
		

//UserCode_Sectionupdate_end
		 
	} 
	
	//UserCode_Sectionprotect
//UserCode_Sectionprotect_end
	
};


//UserCode_Sectionfuncs
//UserCode_Sectionfuncs_end